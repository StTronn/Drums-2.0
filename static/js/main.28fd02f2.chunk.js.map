{"version":3,"sources":["services/shared.js","services/reverb.js","components/Instrument.js","components/InstrumentArea.js","components/TempoButton.js","components/MasterVolume.js","components/PadArea.js","App.js","serviceWorker.js","index.js"],"names":["playSound","context","buffer","time","connector","undefined","envelope","attackTime","decayTime","sustain","relaseTime","source","createBufferSource","console","log","node","createGain","gain","value","linearRampToValueAtTime","currentTime","connect","destination","start","BufferLoader","urlList","callback","this","onload","bufferList","Array","loadCount","SimpleReverb","opts","input","output","createConvolver","_context","p","meta","params","_seconds","seconds","defaultValue","_decay","decay","_reverse","reverse","_buildImpulse","prototype","loadBuffer","url","index","request","XMLHttpRequest","open","responseType","loader","decodeAudioData","response","length","alert","error","onerror","send","load","i","Object","create","dest","disconnect","n","rate","sampleRate","impulse","createBuffer","impulseL","getChannelData","impulseR","Math","random","pow","name","min","max","type","enumerable","get","set","Instrument","props","handleChange","event","setState","volume","target","handleEnvelopeChange","delta","para","state","handleEnvelope","soundkey","selected","gainNode","endConnector","prevProps","changeSelectedSounds","clearPattern","className","id","step","onChange","onClick","React","Component","InstrumentArea","selectedSound","soundkeys","connectors","map","o","key","TempoButton","tempo","changeTempo","style","float","MasterVolume","changeVolume","toFixed","PadArea","pattern","counter","isPlaying","bar","fill","padPattern","handleClick","arr","push","e","App","bufferLoad","soundmap","keys","window","AudioContext","reverb","envelopes","element","obj","soundMap","names","paths","path","loadSounds","interval","setInterval","loop","stop","clearInterval","tap","pos","kick","change","toggleReverb","reverbOn","keyHandler","_","isEmpty","keyCode","handleFiltersValue","soundnames","hihat","openhat","snare","tom","ride","addEventListener","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28fd02f2.chunk.js","sourcesContent":["// Start off by initializing a new context.\n// let context = new (window.AudioContext || window.webkitAudioContext)();\n\n// if (!context.createGain)\n//   context.createGain = context.createGainNode;\n// if (!context.createDelay)\n//   context.createDelay = context.createDelayNode;\n// if (!context.createScriptProcessor)\n//   context.createScriptProcessor = context.createJavaScriptNode;\n\n// // shim layer with setTimeout fallback\n// window.requestAnimFrame = (function(){\n// return  window.requestAnimationFrame       ||\n//   window.webkitRequestAnimationFrame ||\n//   window.mozRequestAnimationFrame    ||\n//   window.oRequestAnimationFrame      ||\n//   window.msRequestAnimationFrame     ||\n//   function( callback ){\n//   window.setTimeout(callback, 1000 / 60);\n// };\n// })();\n\nfunction playSound(context, buffer, time, connector = undefined,envelope={attackTime:0.001,decayTime:0.102,sustain:1.3,relaseTime:0.400}) {\n  var source = context.createBufferSource();\n  let {attackTime,decayTime,sustain,relaseTime}=envelope;\n  console.log(envelope);\n  let node= context.createGain();\n  node.gain.value=0;\n  node.gain.linearRampToValueAtTime(0, context.currentTime);\n  node.gain.linearRampToValueAtTime(5, context.currentTime + attackTime);\n  node.gain.linearRampToValueAtTime(sustain, context.currentTime +attackTime + decayTime);\n  node.gain.linearRampToValueAtTime(0, context.currentTime +attackTime+decayTime+relaseTime);\n\n  source.buffer = buffer;\n  source.connect(node);\n  if (connector !== undefined) node.connect(connector);\n  else node.connect(context.destination);\n\n  source[source.start ? \"start\" : \"noteOn\"](time);\n}\n\nfunction loadSounds(context, obj, soundMap, callback) {\n  // Array-ify\n  var names = [];\n  var paths = [];\n  for (var name in soundMap) {\n    var path = soundMap[name];\n    names.push(name);\n    paths.push(path);\n  }\n  let bufferLoader = new BufferLoader(context, paths, function(bufferList) {\n    for (var i = 0; i < bufferList.length; i++) {\n      var buffer = bufferList[i];\n      var name = names[i];\n      obj[name] = buffer;\n    }\n    if (callback) {\n      callback();\n    }\n  });\n  bufferLoader.load();\n}\n\nfunction BufferLoader(context, urlList, callback) {\n  this.context = context;\n  this.urlList = urlList;\n  this.onload = callback;\n  this.bufferList = new Array();\n  this.loadCount = 0;\n}\n\nBufferLoader.prototype.loadBuffer = function(url, index) {\n  // Load buffer asynchronously\n  var request = new XMLHttpRequest();\n  request.open(\"GET\", url, true);\n  request.responseType = \"arraybuffer\";\n\n  var loader = this;\n\n  request.onload = function() {\n    // Asynchronously decode the audio file data in request.response\n    loader.context.decodeAudioData(\n      request.response,\n      function(buffer) {\n        if (!buffer) {\n          alert(\"error decoding file data: \" + url);\n          return;\n        }\n        loader.bufferList[index] = buffer;\n        if (++loader.loadCount == loader.urlList.length)\n          loader.onload(loader.bufferList);\n      },\n      function(error) {\n        console.error(\"decodeAudioData error\", error);\n      }\n    );\n  };\n\n  request.onerror = function() {\n    alert(\"BufferLoader: XHR error\");\n  };\n\n  request.send();\n};\n\nBufferLoader.prototype.load = function() {\n  for (var i = 0; i < this.urlList.length; ++i)\n    this.loadBuffer(this.urlList[i], i);\n};\n\nexport { loadSounds, playSound };\n","\n/**\n * Simple Reverb constructor.\n *\n * @param {AudioContext} context\n * @param {object} opts\n * @param {number} opts.seconds\n * @param {number} opts.decay\n * @param {boolean} opts.reverse\n */\n\nfunction SimpleReverb (context, opts) {\n    this.input = this.output = context.createConvolver();\n    this._context = context;\n  \n    var p = this.meta.params;\n    opts = opts || {};\n    this._seconds   = opts.seconds  || p.seconds.defaultValue;\n    this._decay     = opts.decay    || p.decay.defaultValue;\n    this._reverse   = opts.reverse  || p.reverse.defaultValue;\n    this._buildImpulse();\n  }\n  \n  SimpleReverb.prototype = Object.create(null, {\n  \n    /**\n     * AudioNode prototype `connect` method.\n     *\n     * @param {AudioNode} dest\n     */\n  \n    connect: {\n      value: function (dest) {\n        this.output.connect( dest.input ? dest.input : dest );\n      }\n    },\n  \n    /**\n     * AudioNode prototype `disconnect` method.\n     */\n  \n    disconnect: {\n      value: function () {\n        this.output.disconnect();\n      }\n    },\n  \n    /**\n     * Utility function for building an impulse response\n     * from the module parameters.\n     */\n  \n    _buildImpulse: {\n      value: function () {\n        var rate = this._context.sampleRate\n          , length = rate * this.seconds\n          , decay = this.decay\n          , impulse = this._context.createBuffer(2, length, rate)\n          , impulseL = impulse.getChannelData(0)\n          , impulseR = impulse.getChannelData(1)\n          , n, i;\n  \n        for (i = 0; i < length; i++) {\n          n = this.reverse ? length - i : i;\n          impulseL[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\n          impulseR[i] = (Math.random() * 2 - 1) * Math.pow(1 - n / length, decay);\n        }\n  \n        this.input.buffer = impulse;\n      }\n    },\n  \n    /**\n     * Module parameter metadata.\n     */\n  \n    meta: {\n      value: {\n        name: \"SimpleReverb\",\n        params: {\n          seconds: {\n            min: 1,\n            max: 50,\n            defaultValue: 3,\n            type: \"float\"\n          },\n          decay: {\n            min: 0,\n            max: 100,\n            defaultValue: 2,\n            type: \"float\"\n          },\n          reverse: {\n            min: 0,\n            max: 1,\n            defaultValue: 0,\n            type: \"bool\"\n          }\n        }\n      }\n    },\n  \n    /**\n     * Public parameters.\n     */\n  \n    seconds: {\n      enumerable: true,\n      get: function () { return this._seconds; },\n      set: function (value) {\n        this._seconds = value;\n        this._buildImpulse();\n      }\n    },\n  \n    decay: {\n      enumerable: true,\n      get: function () { return this._decay; },\n      set: function (value) {\n        this._decay = value;\n        this._buildImpulse();\n      }\n    },\n  \n    reverse: {\n      enumerable: true,\n      get: function () { return this._reverse; },\n      set: function (value) {\n        this._reverse = value;\n        this._buildImpulse();\n      }\n    }\n  \n  });\n  \n  /**\n   * Exports.\n   */\n  \n  export default SimpleReverb;\n  ","import React from \"react\";\nimport '../main.css';\n\nexport default class Instrument extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false,\n      volume: 1,\n      gainNode: null,\n      envelope:{attackTime:0.001,decayTime:0.103,sustain:1.3,relaseTime:0.500}\n    };\n  }\n\n  componentDidMount() {\n    let { connector, context, endConnector,handleEnvelope,soundkey } = this.props;\n    let gainNode = context.createGain();\n    let envelope={attackTime:0.001,decayTime:0.003,sustain:1.3,relaseTime:0.500};\n    connector.connect(gainNode);\n    gainNode.connect(endConnector);\n    this.setState({ gainNode });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== this.props.selected) {\n      let { selected } = this.props;\n      this.setState({ selected });\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ volume: event.target.value });\n  };\n\n  handleEnvelopeChange = (delta,para)=>{\n    let {envelope}=this.state;\n    let {handleEnvelope, soundkey } = this.props;\n    let value=envelope[para];\n    \n    if (value+delta>=0 && value+delta<=3) {\n      envelope[para]=value+delta;\n      this.setState({envelope},()=>{\n        handleEnvelope(envelope,soundkey)\n      });\n    }\n  }\n\n  render() {\n    let { changeSelectedSounds,soundkey,clearPattern } = this.props;\n    let { volume, gainNode, selected } = this.state;\n    let {envelope}=this.state;\n    if (gainNode !== null) gainNode.gain.value = volume;\n    return (\n      <div className=\"instrument\">\n        <div className=\"rangeSlider\">\n          <input\n            type=\"range\"\n            id=\"volume\"\n            min=\"0\"\n            max=\"2\"\n            value={volume}\n            step=\"0.01\"\n            onChange={this.handleChange}\n          />\n\n\n        </div>\n        <div className=\"filterCointainer\">\n        <h5>Attack</h5>\n        <div className=\"filter-button\" id=\"decrease\"\n          onClick={() => {\n            this.handleEnvelopeChange(-0.001,'attackTime')\n          }}\n        >\n          -\n        </div>\n\n        <div className=\"filter-value\" >{envelope.attackTime*100}</div>\n        <div className=\"filter-button\" id=\"increase\"\n          onClick={() => {\n            this.handleEnvelopeChange(0.001,'attackTime')\n          }}\n        >\n          +\n        </div>\n      </div>\n\n      <div className=\"filterCointainer\">\n        <h5>Decay</h5>\n        <div className=\"filter-button\" id=\"decrease\"\n          onClick={() => {\n            this.handleEnvelopeChange(-0.001,'decayTime')\n          }}\n        >\n          -\n        </div>\n\n        <div className=\"filter-value\" >{envelope.decayTime}</div>\n        <div className=\"filter-button\" id=\"increase\"\n          onClick={() => {\n            this.handleEnvelopeChange(0.001,'decayTime')\n          }}\n        >\n          +\n        </div>\n      </div>\n\n      <div className=\"filterCointainer\">\n        <h5>sustain</h5>\n        <div className=\"filter-button\" id=\"decrease\"\n          onClick={() => {\n            this.handleEnvelopeChange(-0.1,'sustain')\n          }}\n        >\n          -\n        </div>\n\n        <div className=\"filter-value\" >{envelope.sustain}</div>\n        <div className=\"filter-button\" id=\"increase\"\n          onClick={() => {\n            this.handleEnvelopeChange(0.1,'sustain')\n          }}\n        >\n          +\n        </div>\n      </div>\n\n      <div className=\"filterCointainer\">\n        <h5>relase</h5>\n        <div className=\"filter-button\" id=\"decrease\"\n          onClick={() => {\n            this.handleEnvelopeChange(-0.001,'relaseTime')\n          }}\n        >\n          -\n        </div>\n\n        <div className=\"filter-value\" >{envelope.relaseTime}</div>\n        <div className=\"filter-button\" id=\"increase\"\n          onClick={() => {\n            this.handleEnvelopeChange(0.001,'relaseTime')\n          }}\n        >\n          +\n        </div>\n      </div>\n\n        <div className={selected === true ? \"instrumentButtonSelected\" : \"instrumentButton\"}\n          onClick={() => {\n            changeSelectedSounds(soundkey);\n          }}\n        >\n          {soundkey}\n        </div>\n        \n        <div className={\"clearButton\"}\n          onClick={() => {\n            clearPattern(soundkey);\n          }}\n        >\n          clear\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Instrument from \"./Instrument\";\nimport '../main.css';\nexport default class InstrumentArea extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSound: null,\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selectedSound !== this.props.selectedSound) {\n      let { selectedSound } = this.props;\n      this.setState({ selectedSound })\n    }\n  }\n\n\n\n  render() {\n    let { soundkeys, changeSelectedSounds, connectors, context, endConnector,handleEnvelope,clearPattern } = this.props;\n    let { selectedSound } = this.state;\n    return (\n      <div className=\"instrumentArea\">\n        {soundkeys.map((o, i) => {\n          return (\n            <Instrument\n              key={i}\n              context={context}\n              changeSelectedSounds={changeSelectedSounds}\n              selected={selectedSound === o ? true : false}\n              soundkey={o}\n              connector={connectors[o]}\n              endConnector={endConnector}\n              handleEnvelope={handleEnvelope}\n              clearPattern={clearPattern}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"../main.css\"\nexport default class TempoButton extends React.Component {\n  render() {\n    let { tempo, changeTempo } = this.props;\n\n    return (\n      <div style={{float:'left'}} className=\"tempoCointainer\">\n        <h5>TEMPO</h5>\n        <div className=\"value-button\" id=\"decrease\"\n          onClick={() => {\n            changeTempo(-10);\n          }}\n        >\n          -\n        </div>\n        <input type=\"number\" id=\"number\" value={tempo} />\n        <div className=\"value-button\" id=\"increase\"\n          onClick={() => {\n            changeTempo(10);\n          }}\n        >\n          +\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class MasterVolume extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            \n        }\n    }\n\n    render(){\n        let {volume,changeVolume}= this.props;\n        return(\n            <div style={{float:'left'}} className=\"tempoCointainer\">\n            <h5>VOL</h5>\n            <div className=\"value-button\" id=\"decrease\"\n              onClick={() => {\n                changeVolume(-0.2);\n              }}\n            >\n              -\n            </div>\n            <input type=\"number\" id=\"number\" value={volume.toFixed(2)*10}/>\n            <div className=\"value-button\" id=\"increase\"\n              onClick={() => {\n                changeVolume(0.2);\n              }}\n            >\n              +\n            </div>\n          </div>\n    \n        )\n    }\n}","import React from \"react\";\n\nexport default class PadArea extends React.Component {\n  \n  constructor(props){\n    super(props);\n    this.state={\n      pattern:null,\n      counter:0,\n      isPlaying:false,\n    }\n  }\n  componentDidMount() {\n    let {bar}=this.props;\n    let pattern= new Array(bar).fill(0);\n    this.setState({pattern})\n  }\n\n  componentDidUpdate(prevProps){\n\n    if(prevProps !== this.props){\n      let {counter,isPlaying,padPattern,bar}=this.props;\n      if (padPattern===undefined) {\n        this.setState({pattern:new Array(bar).fill(0),counter,isPlaying})        \n      }\n\n      else {\n        this.setState({pattern:padPattern,counter,isPlaying})\n      }\n      \n    }\n  }\n\n\n  render() {\n    let { bar, handleClick } = this.props;\n    let {pattern,isPlaying,counter}=this.state;\n    let arr=[]\n    for (let i=0;i<bar;i++) {\n      if (isPlaying && i===counter)\n        arr.push(\"currentPad\");\n      else if (pattern && pattern[i]==1)\n        arr.push(\"padGlow\");\n      else \n        arr.push(\"pad\");\n    }\n\n    //console.log(this.props);\n    return (\n      <div className=\"padArea\">\n        \n        {[...Array(bar)].map((e, i) => (\n          <div className={arr[i]}\n            key={i}\n            onClick={() => {\n              handleClick(i);\n            }}\n          >\n           <h6>{i+1}</h6> \n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./main.css\";\nimport _ from \"lodash\";\nimport { loadSounds, playSound } from \"./services/shared\";\nimport SimpleReverb from \"./services/reverb\";\nimport InstrumentArea from \"./components/InstrumentArea\";\nimport TempoButton from \"./components/TempoButton\";\nimport MasterVolume from \"./components/MasterVolume\";\nimport PadArea from \"./components/PadArea\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buffer: {},\n      pattern: {},\n      soundnames: { kick: \"kick\", hihat: \"hihat\" },\n      soundkeys: [],\n      context: null,\n      soundmap: {\n        kick:\n          \"https://raw.githubusercontent.com/wesbos/JavaScript30/master/01%20-%20JavaScript%20Drum%20Kit/sounds/boom.wav\",\n        hihat:\n          \"https://raw.githubusercontent.com/wesbos/JavaScript30/master/01%20-%20JavaScript%20Drum%20Kit/sounds/hihat.wav \",\n        openhat:\"https://raw.githubusercontent.com/wesbos/JavaScript30/master/01%20-%20JavaScript%20Drum%20Kit/sounds/openhat.wav\",\n        snare:\n          \"https://raw.githubusercontent.com/wesbos/JavaScript30/master/01%20-%20JavaScript%20Drum%20Kit/sounds/snare.wav\",\n        tom:\n          \"https://raw.githubusercontent.com/wesbos/JavaScript30/master/01%20-%20JavaScript%20Drum%20Kit/sounds/tom.wav\",\n        ride:\n          \"https://raw.githubusercontent.com/wesbos/JavaScript30/master/01%20-%20JavaScript%20Drum%20Kit/sounds/ride.wav\"\n        \n      },\n      tempo: 160,\n      bar: 16,\n      isPlaying: false,\n      selectedSound: null,\n      counter: 0,\n      connectors: {},\n      endConnector: null,\n      volume: 1,\n      reverb:null,\n      reverbOn:false, \n      envelopes:null,\n    };\n  }\n\n  componentDidMount() {\n    this.bufferLoad();\n\n  }\n\n  bufferLoad = () => {\n    let { bar, soundmap, context, connectors,volume } = this.state;\n    let buffer = {};\n    let soundkeys = Object.keys(soundmap);\n    let pattern = {};\n    if (context === null) context = new window.AudioContext();\n    let reverb= new SimpleReverb(context, {\n      seconds: 0.2,\n      decay: 0,\n      reverse: 0\n    });\n    let endConnector = context.createGain();\n    endConnector.gain.value=volume;\n    endConnector.connect(context.destination);\n    let envelopes={};\n    \n    for (const element of soundkeys) {\n      let envelope={attackTime:0.001,decayTime:0.102,sustain:1.3,relaseTime:0.400};\n      let arr = new Array(bar).fill(0);\n      pattern[element] = arr;\n      connectors[element] = context.createGain();\n      envelopes[element]=envelope;\n      //connectors[element].connect(context.destination);\n    }\n    loadSounds(context, buffer, soundmap);\n    this.setState({ context, buffer, pattern, soundkeys, connectors, endConnector,reverb,envelopes });\n  };\n\n  clearPattern = (soundkey)=>{\n    let {pattern,bar}=this.state;\n    let arr = new Array(bar).fill(0);\n    pattern[soundkey]=arr;\n    this.setState({pattern});\n  }\n\n  start = () => {\n    let { tempo, isPlaying } = this.state;\n    if (isPlaying === true) return;\n    else {\n      this.interval = setInterval(this.loop, (60 * 1000) / tempo);\n      this.setState({ isPlaying: true });\n    }\n  };\n  stop = () => {\n    if (this.state.isPlaying === false) return;\n    window.clearInterval(this.interval);\n    this.setState({ isPlaying: false });\n  };\n\n  changeTempo = delta => {\n    let { tempo, isPlaying } = this.state;\n    let start = this.start;\n    if (tempo + delta >= 50 && tempo + delta <= 260) {\n      tempo = tempo + delta;\n      if (isPlaying === true) {\n        this.stop();\n        this.setState({ tempo }, () => {\n          start();\n        });\n      } else {\n        this.setState({ tempo });\n      }\n    }\n  };\n\n\n\n  tap = () => {\n    this.setState({ selectedSound: null });\n  }\n  loop = () => {\n    let {\n      counter,\n      bar,\n      soundkeys,\n      pattern,\n      buffer,\n      context,\n      connectors,\n      envelopes,\n    } = this.state;\n    counter = (counter + 1) % bar;\n    for (let soundkey of soundkeys) {\n      if (pattern[soundkey][counter] === 1) {\n        playSound(context, buffer[soundkey], 0, connectors[soundkey],envelopes[soundkey]);\n      }\n    }\n    this.setState({ counter });\n  };\n\n  changeSelectedSounds = name => {\n    this.setState({ selectedSound: name });\n  };\n\n  handleClick = pos => {\n    //if no sound selected each button will play th kick\n    //if (this.state.selectedSound==='pads')\n    // get pos and selected sound\n    // if selectedsound !=='pads'\n    // toggle pattern[selectedsound][pos]\n    // mutate\n    let { context, buffer, selectedSound, pattern } = this.state;\n    if (selectedSound === null) {\n      playSound(context, buffer.kick, 0);\n    } else {\n      const change = pattern[selectedSound][pos] === 0 ? 1 : 0;\n\n      let arr = [];\n      for (let i = 0; i < pattern[selectedSound].length; i++) {\n        if (i !== pos) arr.push(pattern[selectedSound][i]);\n        else arr.push(change);\n      }\n      pattern[selectedSound] = arr;\n    }\n    this.setState({ pattern });\n  };\n\n  handleEnvelope = (envelope,soundkey)=>{\n    let {envelopes}=this.state;\n    \n    envelopes[soundkey]=envelope;\n    this.setState({envelopes});\n  }\n\n  toggleReverb = ()=> {\n    let {reverbOn}=this.state;\n    \n    this.setState({reverbOn:!reverbOn})\n\n  }\n\n  keyHandler = (e) => {\n    let { buffer, selectedSound, context } = this.state;\n\n    if (_.isEmpty(buffer) || selectedSound !== null)\n      return;\n    if (e.keyCode === 97 || e.keyCode == 49)\n      playSound(context, buffer['kick'], 0);\n    if (e.keyCode === 98 || e.keyCode == 50)\n      playSound(context, buffer['hihat'], 0);\n    if (e.keyCode === 99 || e.keyCode == 51)\n      playSound(context, buffer['snare'], 0);\n    if (e.keyCode === 100 || e.keyCode == 52)\n      playSound(context, buffer['tom'], 0);\n    if (e.keyCode === 101 || e.keyCode == 53)\n      playSound(context, buffer['ride'], 0);\n  }\n\n  changeVolume = delta => {\n    let {volume}=this.state;\n    if (volume+delta>=0 && volume+delta<=2){\n\n      this.setState({volume:volume+delta});\n    }\n  }\n\n  handleFiltersValue = ()=> {\n    let {endConnector,volume,reverb,reverbOn,context}=this.state;\n    if (endConnector!==null){\n      endConnector.gain.value=volume;\n      if (reverbOn){\n\n        endConnector.disconnect();\n        endConnector.connect(reverb.input);\n        reverb.connect(context.destination);  \n      }\n      else {\n        endConnector.disconnect();\n        endConnector.connect(context.destination);\n      }\n    } \n  \n  }\n   \n  render() {\n    let { context, soundkeys, bar, tempo, connectors, endConnector, pattern, selectedSound, isPlaying, counter,volume,reverbOn } = this.state;\n    window.addEventListener('keydown', this.keyHandler);\n    this.handleFiltersValue();\n    return (\n      <div >\n\n        {!_.isEmpty(connectors) && (\n          <div className=\"cointainer\">\n            <div className=\"overallControl\">\n              <TempoButton tempo={tempo} changeTempo={this.changeTempo} />\n              <MasterVolume volume={volume} changeVolume={this.changeVolume} />\n              <div \n                className={reverbOn===true?\"reverbButtonSelected\":\"reverbButton\"}\n                onClick={this.toggleReverb}\n              >\n                reverb\n              </div>\n            </div>\n\n            <InstrumentArea\n              soundkeys={soundkeys}\n              changeSelectedSounds={this.changeSelectedSounds}\n              connectors={connectors}\n              endConnector={endConnector}\n              context={context}\n              selectedSound={selectedSound}\n              handleEnvelope={this.handleEnvelope}\n              clearPattern={this.clearPattern}\n            />\n            <PadArea bar={bar} handleClick={this.handleClick} padPattern={pattern[selectedSound]} counter={counter} isPlaying={isPlaying} />\n            <div className=\"controlArea\">\n              <div className={isPlaying === false ? \"start\" : \"stop\"}\n                onClick={this.state.isPlaying === false ? this.start : this.stop}\n              >\n                {this.state.isPlaying === false ? \"start\" : \"stop\"}\n              </div>\n              <div className={selectedSound !== null ? \"start\" : \"stop\"}\n                onClick={this.tap}\n              >\n                tap\n            </div>\n\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}